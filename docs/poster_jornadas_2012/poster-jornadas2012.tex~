\documentclass[portrait]{a0poster}
\setlength{\textwidth}{83cm} % Error en "a0poster": 87cm para esta dimensión
                             % en la orientación "portrait"
%\setlength{\textheight}{105cm}
\usepackage{multicol}
\setlength{\columnsep}{4cm}
\newlength{\anchofiliacion}
\setlength{\anchofiliacion}{39.5cm}

\usepackage{tikz}
\usepackage{calc}
\input{TikzShapes/corpus_shape}

\usepackage{amsmath}
\usepackage{latexsym}
\usepackage{pifont}
\usepackage[latin1]{inputenc}
\usepackage{graphicx}
\usepackage{booktabs}
\usepackage{url}
\usepackage{xspace}

\graphicspath{{figures/}}

% Algunos colores...
\definecolor{ctextotit}{rgb}{0.00,0.00,1.00}
\definecolor{cfondoparte}{rgb}{0.80,0.80,1.00}
\definecolor{cbordeparte}{rgb}{0.00,0.00,1.00}
\definecolor{cfondosubparte}{rgb}{0.80,0.80,0.80}
\definecolor{cbordesubparte}{rgb}{0.20,0.20,0.20}
\definecolor{cmarcado}{rgb}{0.90,0.90,0.90}
\definecolor{cnota}{rgb}{0.60,0.60,0.60}
\definecolor{ccarflecha}{rgb}{0.00,0.00,1.00}
\definecolor{cflechaMLP}{rgb}{0.75,0.75,1.00}
\definecolor{cenfasis}{rgb}{1.00,0.00,0.00}
\definecolor{cmarcamiitem}{rgb}{1.00,0.00,0.00}
\definecolor{cmarcaitemlista}{rgb}{0.00,0.00,1.00}
\definecolor{cmarcaitemsublista}{rgb}{0.00,0.00,1.00}

% Para poder conectar nodos en diferentes imágenes TikZ...
\tikzstyle{every picture}+=[remember picture]

% Para marcar una zona de texto con un color y luego poder dibujar líneas entre zonas marcadas...
\newsavebox{\cajamarcado}
\newcommand{\nombreMarcado}{}
\newenvironment{marcado}[2]{\renewcommand{\nombreMarcado}{#1}\begin{lrbox}{\cajamarcado}%
\begin{minipage}{#2}}{\end{minipage}%
\end{lrbox}\noindent%
\tikz \node[fill=cmarcado, inner xsep=0pt] (\nombreMarcado) {\usebox{\cajamarcado}};}

% Notas conectadas con una flecha a un punto del texto principal...
\newcommand{\nota}[4][1ex]{\makebox[0pt][l]{%\hspace{0.1em}%
\raisebox{#1}[0pt][0pt]{%
\tikz \draw[<-, cnota, line width=3pt] (0,0)--(#2,#3) node
[shape=rectangle, draw=cnota, right, inner sep=3pt, rounded corners]
{\textrm{\strut\rule{0.5em}{0pt}#4\rule{0.5em}{0pt}}};}}}

% Un carácter flecha...
\newcommand{\flecha}{\textcolor{ccarflecha}{\ding{233}}}

% Para dar títulos a partes del póster...
\newcommand{\colapsacentra}[1]{\makebox[0pt]{%
\begin{tabular}[c]{c}
#1
\end{tabular}}}
\newcommand{\parte}[1]{\bigskip%
\centerline{%
\colapsacentra{\tikz \draw [top color=cfondoparte,
                            rounded corners,
                            shading=axis,
                            shading angle=0,
                            draw=cbordeparte] (0,0) rectangle(\columnwidth, 2cm);}%
\colapsacentra{\textbf{\Large#1}}}%
\bigskip}
\newcommand{\subparte}[1]{\medskip%
\centerline{%
\colapsacentra{\tikz \draw [top color=cfondosubparte,
                            rounded corners,
                            shading=axis,
                            shading angle=0,
                            draw=cbordesubparte] (0,0) rectangle(0.75\columnwidth, 1.5cm);}%
\colapsacentra{\textbf{\large#1}}}%
\medskip}

% Incluir una figura dando su anchura o altura...
\newcommand{\figuraancho}[2]{\resizebox{#1}{!}{\includegraphics{#2}}}
\newcommand{\figuraalto}[2]{\resizebox{!}{#1}{\includegraphics{#2}}}
\newcommand{\figuratikzancho}[2]{\resizebox{#1}{!}{\input{TikzFigs/#2}}}
\newcommand{\figuratikzalto}[2]{\resizebox{!}{#1}{\input{TikzFigs/#2}}}

% Marca para ítems fuera de lista...
\newcommand{\miitem}{\noindent\makebox[0pt][r]{\textcolor{cmarcamiitem}{$\rhd$} }\ignorespaces{}}

% Lista con ítems, nivel 1...
\newenvironment{lista}{\begin{list}%
{\textcolor{cmarcaitemlista}{$\bullet$}}%
{\setlength{\leftmargin}{3cm}}%
}{
\end{list}}

% Lista con ítems, nivel 2...
\newenvironment{sublista}{\begin{list}%
{\textcolor{cmarcaitemsublista}{$\circ$}}%
{\setlength{\leftmargin}{3cm}}%
}{
\end{list}}

% Destacar coloreando...
\renewcommand{\emph}[1]{\textcolor{cenfasis}{#1}}

\renewcommand\refname{\parte{Referencias}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{document}
\thispagestyle{empty}
\sffamily{}\large
%\vfill{}

\newlength{\anchologo}
\setlength{\anchologo}{9cm}

\begin{center}

 \  \\
 \  \\

%\centerline{%
%\begin{tabular}[c]{c@{\protect\rule{0.5\columnsep}{0cm}}c@{\protect\rule{\columnsep}{0cm}}c@{\protect\rule{\columnsep}{0cm}}c@{\protect\rule{0.5\columnsep}{0cm}}c}
\begin{tabular}[c]{c@{\protect\rule{\columnsep}{0cm}}c@{\protect\rule{\columnsep}{0cm}}c@{\protect\rule{0.5\columnsep}{0cm}}c}
\begin{tabular}{c}
\figuraancho{\anchologo}{Logos/logoUPV.png}
\end{tabular} &
\begin{tabular}[b]{c}
\Huge\textbf{\textcolor{ctextotit}{Catalyde:}}\\\\
\Huge\textbf{\textcolor{ctextotit}{herramienta para enseñar programación}}
\end{tabular} &
\begin{tabular}{c}
\figuraancho{\anchologo}{Logos/logoDSIC.png}
\end{tabular} &
\end{tabular}\\
% }
\end{center}

\vspace{-3cm}

\centerline{%
\Large
\begin{tabular}[b]{c}
\textbf{Catalin~Stanciu, Joan~Pastor, Salvador~Espa{\~n}a}\\
\textbf{cstanciu@dsic.upv.es, jpastor@dsic.upv.es, sespana@dsic.upv.es}\\
Departamento de Sistemas Informáticos y Computación \\
Universidad Politécnica de Valencia
\end{tabular}}

\vspace{4cm}

\begin{multicols}{2}

\parte{Motivación}

\miitem Aprender a programar requiere del desarrollo de
habilidades por medio de la práctica. Del mismo modo que no aprendemos
a ir en bicicleta con una bici de carrera, también tiene sentido
aprender a programar en unas condiciones que faciliten el proceso de
aprendizaje.

\vspace{8mm}
\begin{center}
\includegraphics[scale=0.75]{bicis.pdf}
\end{center}
\vspace{8mm}

\miitem Históricamente se ha planteado el desarrollo de lenguajes con
fines pedagógicos (ej. Logo), así como entornos más orientados al
aprendizaje que al uso profesional (ej. para java, utilizar Bluej en
lugar de Eclipse).

\miitem Se presenta una herramienta para facilitar el aprendizaje a la
programación. Está orientada principalmente a las asignaturas de
primeros cursos, en particular, para asignaturas que utilizan el
lenguaje C (aunque puede adaptarse a cualquier otro lenguaje de
programación como java). Se ha elegido C para poder implantar la
herramienta en las asignatura de informática de los grados de
ingeniería técnica industrial en la UPV (la ETSINF utiliza Java en los
primeros cursos).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\vspace{8mm}
\parte{Situación actual}

\miitem \textbf{Por parte del profesor:} Tradicionalmente, la
elaboración de las prácticas consiste en el desarrollo de un boletín,
la implementación de una solución y, en algunos casos, la selección de
una parte de la misma para que el alumno la complete. Finalmente el
material se deja en poliformaT.

\miitem \textbf{Por parte del alumno:} bajarse el boletín y los
fragmentos de código a completar, manipular las distintas versiones
que se van realizando en las carpetas de su ordenador, utilizando un
entorno de desarrollo (por ejemplo, en el grado de ingeniería técnica
industrial se utiliza \texttt{devcpp}) y finalmente entregar las
soluciones, si así se solicita, mediante correo electrónico o vía
poliformaT.

Normalmente el alumno no tiene acceso a una versión funcional del
programa para poder probarlo y así entender más fácilmente qué es lo
que se pretende resolver. La experiencia nos indica que poder ejecutar
la solución ayuda enormemente a entender lo que se le pide.

Aunque proporcionar una solución compilada puede mejorar la
comprensión del ejercicio, el alumno no podrá utilizarla para validar
las distintas partes realizadas por él y normalmente no podrá saber si
una parte es correcta hasta haber completado todo el ejercicio.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\vspace{8mm}
\parte{Sistema propuesto}

\miitem Se trata de una herramienta vía web en la que el alumno se
  autentifica y puede acceder a las prácticas elaboradas por el
  profesor.

\miitem La descripción de las prácticas contiene zonas de edición de
código donde el alumno puede escribir su solución que puede activar y
desactivar (se utiliza la solución correcta oculta).

\miitem El alumno puede probar en todo momento la solución oculta para
  entender lo que se pide o sustituir partes de ella por su propia
  solución.

\miitem Existen la opción para comprobar la validez de las distintas
partes realizadas por el alumno de manera independiente del programa
final.

\miitem Las diferentes propuestas del alumno se pueden realizar en
  ejemplos sencillos y combinarse en un programa más complejo que el
  alumno puede probar viendo cómo dicho código lo ha realizado él
  mismo y que puede analizar, estudiar y probar.

\vspace{15mm}
\begin{center}
\includegraphics[scale=0.7]{edicion.png}
\end{center}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\parte{¿Qué aporta esta herramienta para aprender a programar?}

\miitem Poder trabajar con los programas de manera incremental. El
  profesor puede dividir el código en apartados y el alumno podrá
  activar o desactivar su propio código de modo que pueda ejecutar el
  programa independientemente de que se haya completado todo.

\miitem Centrarse en los aspectos concretos que el alumno debe
aprender. Hasta ahora, el profesor proporciona un esqueleto del
programa, pero no hay garantía de que el alumno respete la
estructura.

\miitem Poder validar determinados fragmentos de código mediante el uso
  de casos de prueba. Esta validación es parcial en la medida en que
  pasar unos casos de prueba no garantiza la corrección del algoritmo
  pero sí a la inversa: no pasar estos casos indica que hay un
  error. Estas técnicas se utilizan también en los oráculos de los
  concursos de programación.

%% \miitem Poder contextualizar los mensajes de error proporcionados por el
%%   compilador.

\miitem Mejor seguimiento y evaluación del alumno: El sistema guarda
todos los pasos intermedios realizados por el alumno. Facilita la
corrección de las prácticas, así como la detección de copias.

\miitem Ejecutar el programa e interactuar con él mediante un terminal
emulado vía web permite utilizar la aplicación en cursos online y
facilita la realización de prácticas desde casa. También elimina la
necesidad de instalar el entorno por parte de los alumnos.

\vspace{8mm}
\begin{center}
  \includegraphics[scale=0.65]{ejecucion.png}
\end{center}
\vspace{8mm}

%% \miitem Complementar las actividades de programación con preguntas de
%% test y pequeños cuestionarios de comprensión.

%por ejemplo, la idea es que el alumno trabaje con una matriz
%\verb+char[8][8]+ que representa un tablero de ajedrez y que al
%modificarla se cambie un representación del tablero en bonito en la
%pantalla, o tener la famosa tortuga de logo, etc...).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\bigskip
\parte{Ampliaciones futuras}

\miitem Modo examen:
\begin{lista}
\item Utilizar el mismo entorno que el usado normalmente en las prácticas.
\item No hace falta tener que subir un conjunto de ficheros como
  ocurre con los entornos offline.
\end{lista}

\miitem Trabajo colaborativo: permitir que varios alumnos trabajen en
grupo o que si varios alumnos se sientan en un mismo ordenador puedan
compartir el trabajo realizado en dicha sesión, mientras actualmente están
obligados a entrar con la cuenta de uno de ellos

\miitem Modo evaluación y estadísticas: para que el profesor pueda navegar más
cómodamente inspeccionando las prácticas realizadas por los alumnos,
visualizar estadísticas, etc.

\miitem Modo para que el profesor pueda editar e introducir los nuevos
contenidos con más facilidad.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\parte{Conclusiones}


\miitem La aplicación permite focalizar a los alumnos en las diversas
partes que forman un programa, centrándose así en la parte que el
profesor quiera enfatizar en cada momento. Los alumnos, pueden
verificar si una parte del código es correcta sin tener que
completar todo el programa.

\miitem El profesor escribe su programa y debe marcar lo que deben
completar los alumnos. Los alumnos no necesitan acceder al código no
relevante para aprender los conceptos requeridos.

\miitem La aplicación ha sido diseñada para poder ser lo
suficientemente flexible, para que el profesor pueda añadir funciones
que verifiquen el funcionamiento del código, así como ejecutar
diferentes instancias del programa con diferentes configuraciones. Por
tanto, es el profesor el que decide mediante el diseño de las
prácticas aquellos aspectos en los que el alumno deberá centrarse.

\miitem Es criticable la falta de realismo respecto a un entorno de
  programación convencional:
\begin{lista}
\item Resulta necesario una transición progresiva a entornos más
  convencionales. Para ello se pedirá progresivamente ejercicios que
  requieran escribir un programa completo.
\item Creemos que resulta más importante atraer a los alumnos con
  experiencias sencillas y exitosas y centrarse en la parte
  algorítmica. Una vez aprendido esto, saltar a un entorno real
  resultará relativamente sencillo.
\end{lista}

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% \begin{thebibliography}{20}

%% \bibitem{Damian2010}
%% J. Damian Segrelles, Miguel A. Salido, Adriana Giret
%% \newblock Metodologías activas para la adecuación de la asignatura Fundamentos de Informática al plan Bolonia.
%% \newblock {\em Actas del CUIEET 2010}, 2010.
%% \end{thebibliography}

\end{multicols}
\end{document}

%%% Local Variables:
%%% mode: latex
%%% ispell-local-dictionary: "american"
%%% TeX-master: t
%%% End:
